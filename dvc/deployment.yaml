---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: dvc-pv
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/dvc  # Make sure this exists on the node
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dvc-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dvc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dvc
  template:
    metadata:
      labels:
        app: dvc
    spec:
      containers:
        - name: dvc
          image: your-registry/dvc-local:latest
          command: ["dvc", "server", "--host", "0.0.0.0", "--port", "8000"]
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: dvc-storage
              mountPath: /home/dvcuser/dvcdata
      volumes:
        - name: dvc-storage
          persistentVolumeClaim:
            claimName: dvc-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: dvc-service
spec:
  selector:
    app: dvc
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dvc-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: dvc.local  # Make sure this domain resolves to your cluster
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: dvc-service
                port:
                  number: 80