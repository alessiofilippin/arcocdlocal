apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dvc-pvc-repo
spec:
  # storageClassName: nfs-storage
  volumeName: nfs-pv-dvc-repo
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 15Gi

# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: dvc-pvc-current
# spec:
#   storageClassName: local-storage
#   volumeName: local-pv-dvc-repo-current-model
#   accessModes:
#     - ReadWriteMany
#   resources:
#     requests:
#       storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dvc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dvc
  template:
    metadata:
      labels:
        app: dvc
    spec:
      # nodeName: ubuntu03
      containers:
        - name: dvc
          image: private.registry.com:31445/dvc:latest
          command: ["dvc", "server", "--host", "0.0.0.0", "--port", "8000"]
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: dvc-storage-repo
              mountPath: /home/dvcuser/dvcdata
          # volumeMounts:
          #   - name: dvc-storage-current
          #     mountPath: /home/dvcuser/dvcdata-current
      volumes:
        - name: dvc-storage-repo
          persistentVolumeClaim:
            claimName: dvc-pvc-repo   
        # - name: dvc-storage-current
        #   persistentVolumeClaim:
        #     claimName: dvc-pvc-current
---
apiVersion: v1
kind: Service
metadata:
  name: dvc-service
spec:
  selector:
    app: dvc
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dvc-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: dvc.local.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: dvc-service
                port:
                  number: 80